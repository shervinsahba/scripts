#!/bin/bash
# Controls volume using pulseaudio and displays notification.

get_volume() {
	pactl get-sink-volume @DEFAULT_SINK@ | grep -o '..%' | head -n1 | cut -d'%' -f1
}

get_mute_status() {
	status=$(pactl get-sink-mute @DEFAULT_SINK@ | awk '/Mute:/{print $2}')
	if [[ "$status" == "yes" ]]; then
		echo "MUTED"
	fi
}

volume_notification() {
	msgId="991049"  # arbitrary but unique message id
	volume=$(get_volume)
	mute_status=$(get_mute_status)
	if [[ "$mute_status" == "MUTED" ]]; then
		img="audio-volume-muted"
	else
		img="audio-volume-high"
	fi

	# send notification
	dunstify -u low -i "$img" -r "$msgId" "Volume: ${volume}% ${mute_status}" # "$(get-progress-string 20 "<b>▰</b>" "▱" $volume)"

	# play the volume changed sound
	canberra-gtk-play -i audio-volume-change -d "changeVolume"
}

case "$1" in
	up)
		pactl set-sink-volume @DEFAULT_SINK@ +5%
		volume_notification
		;;
	down)
		pactl set-sink-volume @DEFAULT_SINK@ -5%
		volume_notification
		;;
	mute)
		pactl set-sink-mute @DEFAULT_SINK@ toggle
		volume_notification
		;;
	*) 
		echo "Usage: $(basename $0) <up/down/mute>"
		;;
esac


